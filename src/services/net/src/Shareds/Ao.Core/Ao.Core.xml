<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ao.Core</name>
    </assembly>
    <members>
        <member name="M:Ao.Core.Bytes.StructHelper.ToByes(System.Object)">
            <summary>
            将结构体转为Byte数组
            </summary>
            <param name="value">目标结构体</param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.Bytes.StructHelper.ToStruce(System.Byte[],System.Type)">
            <summary>
            将byte数组转为结构体
            </summary>
            <param name="bytes">数据</param>
            <param name="type">转为的类型</param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.Bytes.StructHelper.ToStruce``1(System.Byte[])">
            <summary>
            <inheritdoc cref="M:Ao.Core.Bytes.StructHelper.ToStruce(System.Byte[],System.Type)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:Ao.Core.CASLocker">
            <summary>
            原子锁
            </summary>
        </member>
        <member name="M:Ao.Core.CASLocker.GetToken">
            <summary>
            获取一个原子锁凭证
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ao.Core.DefaultPackage`1">
            <summary>
            默认的包
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Ao.Core.ICASToken">
            <summary>
            原子锁凭证
            </summary>
        </member>
        <member name="M:Ao.Core.ICASToken.Release">
            <summary>
            释放原子锁
            </summary>
        </member>
        <member name="T:Ao.Core.IIdentitiyable">
            <summary>
            表示可标识的
            </summary>
        </member>
        <member name="P:Ao.Core.IIdentitiyable.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Ao.Core.IIdentitiyable.Descript">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Ao.Core.IMedataInfo">
            <summary>
            表示元数据信息
            </summary>
        </member>
        <member name="P:Ao.Core.IMedataInfo.Version">
            <summary>
            当前版本
            </summary>
        </member>
        <member name="T:Ao.Core.IPackageIdentity">
            <summary>
            表示包裹的标识
            </summary>
        </member>
        <member name="P:Ao.Core.IPackageIdentity.Assembly">
            <summary>
            标识程序集
            </summary>
        </member>
        <member name="T:Ao.Core.IPackagingService`3">
            <summary>
            包服务的定义
            </summary>
            <typeparam name="TPackage">包类型</typeparam>
            <typeparam name="TInheritType">包内容类型</typeparam>
            <typeparam name="TAddingType">添加的类型</typeparam>
        </member>
        <member name="P:Ao.Core.IPackagingService`3.SyncRoot">
            <summary>
            同步根
            </summary>
        </member>
        <member name="P:Ao.Core.IPackagingService`3.Packages">
            <summary>
            view类型集合
            </summary>
        </member>
        <member name="P:Ao.Core.IPackagingService`3.Inherits">
            <summary>
            包含的所有<see cref="!:TInheritType"/>对象
            </summary>
        </member>
        <member name="E:Ao.Core.IPackagingService`3.PackagesChanged">
            <summary>
            表示<see cref="P:Ao.Core.IPackagingService`3.Packages"/>集合改变了
            </summary>
        </member>
        <member name="M:Ao.Core.IPackagingService`3.Add(System.Reflection.Assembly,`1[])">
            <summary>
            添加<see cref="!:View"/>类型
            </summary>
            <param name="views">类型集合</param>
            <returns>成功添加入的类型</returns>
        </member>
        <member name="M:Ao.Core.IPackagingService`3.Condition(`1)">
            <summary>
            类型条件
            </summary>
            <param name="type">目标类型</param>
            <returns>是否合适</returns>
        </member>
        <member name="M:Ao.Core.IPackagingService`3.Remove(System.Reflection.Assembly,`0)">
            <summary>
            移除整个视图包裹，根据程序集找
            </summary>
            <param name="assembly">目标程序集</param>
            <param name="removedPkg">被移除的包，如果找不到或者权限不够返回null</param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.IPackagingService`3.Remove(System.Reflection.Assembly,`1[])">
            <summary>
            移除某一项视图项
            </summary>
            <param name="assembly">目标程序集</param>
            <param name="removes">需要移除的视图项目</param>
            <returns>移除成功的集合</returns>
        </member>
        <member name="M:Ao.Core.IPackagingService`3.Clear">
            <summary>
            清除使所有视图包
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ao.Core.Lru.LruCacher`2">
            <summary>
            lru缓存器
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Ao.Core.Lru.LruCacher`2.Max">
            <summary>
            最大个数
            </summary>
        </member>
        <member name="P:Ao.Core.Lru.LruCacher`2.Count">
            <summary>
            当前的个数
            </summary>
        </member>
        <member name="M:Ao.Core.Lru.LruCacher`2.Get(`0)">
            <summary>
            获取某一项，如跟失败返回默认值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.Lru.LruCacher`2.Add(`0,`1)">
            <summary>
            添加一项
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="E:Ao.Core.NotifyableObject.PropertyChanged">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Ao.Core.NotifyableObject.RaisePropertyChanged(System.String)">
            <summary>
            通知属性更改了
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Ao.Core.NotifyableObject.RaisePropertyChanged``1(``0@,``0,System.String)">
            <summary>
            交互值并<inheritdoc cref="M:Ao.Core.NotifyableObject.RaisePropertyChanged(System.String)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="prop"></param>
            <param name="value"></param>
            <param name="name"></param>
        </member>
        <member name="T:Ao.Core.PackageBase`1">
            <summary>
            表示包的基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Ao.Core.PackageBase`1.Assembly">
            <summary>
            提供方的程序集
            </summary>
        </member>
        <member name="P:Ao.Core.PackageBase`1.Medatas">
            <summary>
            提供
            </summary>
        </member>
        <member name="F:Ao.Core.PackagingService`3.createAssembly">
            <summary>
            创建者的程序集
            </summary>
        </member>
        <member name="E:Ao.Core.PackagingService`3.PackagesChanged">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Ao.Core.PackagingService`3.Packages">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Ao.Core.PackagingService`3.Inherits">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Ao.Core.PackagingService`3.SyncRoot">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Ao.Core.PackagingService`3.Add(System.Reflection.Assembly,`1[])">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="views"><inheritdoc/></param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.PackagingService`3.Condition(`1)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="type"><inheritdoc/></param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.PackagingService`3.Remove(System.Reflection.Assembly,`0)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="assembly"><inheritdoc/></param>
            <param name="removedPkg"><inheritdoc/></param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.PackagingService`3.Remove(System.Reflection.Assembly,`1[])">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="assembly"><inheritdoc/></param>
            <param name="removes"><inheritdoc/></param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.PackagingService`3.Clear">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:Ao.Core.PackagingServiceExtensions">
            <summary>
            对<see cref="T:Ao.Core.IPackagingService`3"/>的扩展
            </summary>
        </member>
        <member name="M:Ao.Core.PackagingServiceExtensions.Add``3(Ao.Core.IPackagingService{``0,``1,``2},``1[])">
            <summary>
            添加当前程序集的包内容
            </summary>
            <typeparam name="TPackage">包类型</typeparam>
            <typeparam name="TInheritType">包内容类型</typeparam>
            <typeparam name="TAddingType">添加的类型</typeparam>
            <param name="service">目标范围</param>
            <param name="metadatas">内容元数据集合</param>
        </member>
        <member name="M:Ao.Core.PackagingServiceExtensions.Remove``3(Ao.Core.IPackagingService{``0,``1,``2},``0)">
            <summary>
            移除一个包
            </summary>
            <typeparam name="TPackage">包类型</typeparam>
            <typeparam name="TInheritType">包内容类型</typeparam>
            <typeparam name="TAddingType">添加的类型</typeparam>
            <param name="service">目标范围</param>
            <param name="pkg">目标包</param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.PackagingServiceExtensions.Remove``3(Ao.Core.IPackagingService{``0,``1,``2},``1[])">
            <summary>
            移除一些包内容
            </summary>
            <typeparam name="TPackage">包类型</typeparam>
            <typeparam name="TInheritType">包内容类型</typeparam>
            <typeparam name="TAddingType">添加的类型</typeparam>
            <param name="service">目标范围</param>
            <param name="inherits">包内容</param>
            <returns></returns>
        </member>
        <member name="M:Ao.Core.TimeHelper.GetTimestamp(System.DateTime)">
            <summary>
            获取时间戳
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
    </members>
</doc>
